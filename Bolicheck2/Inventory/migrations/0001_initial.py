# Generated by Django 5.0.7 on 2025-03-26 00:23

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('image', models.ImageField(default='categories/default.webp', upload_to='categories/', verbose_name='Foto')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'db_table': 'category',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductsHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('creación', 'Se crea el producto'), ('entrada', 'Entrada de producto'), ('salida', 'Salida de producto'), ('habilitación', 'Se habilita el producto'), ('deshabilitación', 'Se deshabilita el producto'), ('edición', 'Se ha editado el producto')], max_length=20, verbose_name='Tipo de registro')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha del registro')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción del registro')),
            ],
            options={
                'verbose_name': 'Historial de productos',
                'verbose_name_plural': 'Historial de productos',
                'db_table': 'products_history',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('status', models.CharField(choices=[('pendiente', 'Por Verificar'), ('completado', 'Completado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=10, verbose_name='Estado de la compra')),
                ('total', models.FloatField(verbose_name='Total')),
                ('is_redemption', models.BooleanField(default=0, verbose_name='Es redencion')),
                ('admin_cancel', models.BooleanField(blank=True, null=True, verbose_name='Cancelado por el administrador')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de acción')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'db_table': 'sale',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SalePrizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Cantidad')),
                ('unit_price', models.FloatField(verbose_name='Precio Unitario')),
                ('subtotal', models.FloatField(verbose_name='Subtotal')),
            ],
            options={
                'verbose_name': 'Premio en Redención',
                'verbose_name_plural': 'Premios en Redención',
                'db_table': 'sale_prize',
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Cantidad')),
                ('unit_price', models.FloatField(verbose_name='Precio Unitario')),
                ('subtotal', models.FloatField(verbose_name='Subtotal')),
            ],
            options={
                'verbose_name': 'Producto en Venta',
                'verbose_name_plural': 'Productos en Ventas',
                'db_table': 'sale_product',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Cantidad')),
                ('min_stock', models.PositiveIntegerField(verbose_name='Cantidad mínima')),
                ('max_stock', models.PositiveIntegerField(verbose_name='Cantidad máxima')),
                ('price', models.FloatField(verbose_name='Precio')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('image', models.ImageField(default='products/default.webp', upload_to='products/', verbose_name='Foto')),
                ('points', models.IntegerField(default=0, verbose_name='Puntos por compra')),
                ('is_available', models.BooleanField(default=False, verbose_name='Disponible')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.category', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'product',
                'ordering': ['id'],
            },
        ),
    ]
